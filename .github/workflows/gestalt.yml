name: Gestalt

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: gestalt-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pr:
    name: Node ${{ matrix.node }} in ${{ matrix.os }}
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        node: ['14.13.1', '16', '17']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: npx nx run-many --target=build --all --parallel=3
      - name: Test
        run: npx nx run-many --target=test:ci --all --parallel=3
      - name: Lint
        run: npx nx run-many --target=lint --all --parallel=3
      - name: Type-check
        run: npx nx run-many --target=tsc --all --parallel=3
      - uses: codecov/codecov-action@v2
        if: ${{ matrix.node == '17' && matrix.os == 'ubuntu-latest' }} # Only run the upload once
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/*/junit-*.xml
          fail_ci_if_error: false
          verbose: true
  main:
    name: Node ${{ matrix.node }} in ${{ matrix.os }}
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    strategy:
      matrix:
        node: ['14.13.1', '16', '17']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: npx nx run-many --target=build --all --parallel=3
      - name: Test
        run: npx nx run-many --target=test:ci --all --all --parallel=3
      - name: Lint
        run: npx nx run-many --target=lint --all --parallel=3
      - name: Type-check
        run: npx nx run-many --target=tsc --all --parallel=3
      - uses: codecov/codecov-action@v2
        if: ${{ matrix.node == '17' && matrix.os == 'ubuntu-latest' }} # Only run the upload once
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: packages/*/junit-*.xml
          fail_ci_if_error: false
          verbose: true
