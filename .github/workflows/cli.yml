name: cli

on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: cli-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.package }} with Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['12', '14', '16']
        package: ['cli', 'cli-core', 'cli-support']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        working-directory: packages/${{ matrix.package }}
        run: pnpm run build
  test:
    name: Test ${{ matrix.package }} with Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['12', '14', '16']
        package: ['cli', 'cli-core', 'cli-support']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Test
        working-directory: packages/${{ matrix.package }}
        run: pnpm run test
  features:
    name: Features with Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['12', '14', '16']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Features
        run: pnpm run features
  lint:
    name: Lint ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['cli', 'cli-core', 'cli-support']
    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        working-directory: packages/${{ matrix.package }}
        run: pnpm install
      - name: Lint
        working-directory: packages/${{ matrix.package }}
        run: pnpm run lint
  type-check:
    name: Type-check ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['cli', 'cli-core', 'cli-support']
    steps:
      - uses: actions/checkout@v1
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: latest
      - name: Set Node.js
        uses: actions/setup-node@master
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - name: Install dependencies
        working-directory: packages/${{ matrix.package }}
        run: pnpm install
      - name: Type-check
        working-directory: packages/${{ matrix.package }}
        run: pnpm run tsc
